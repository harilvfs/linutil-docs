[{"content":"Well-thought-through product announcements will help increase feature awareness and engage users with new functionality. Just like sharing your public roadmap, it\u0026rsquo;s also a great way to let potential customers see that you\u0026rsquo;re constantly improving.\nFurther reading Read How to announce product updates and features ","date":"2023-09-07","id":0,"permalink":"/blog/example-post/","summary":"You can use blog posts for announcing product updates and features.","tags":[],"title":"Example Post"},{"content":"","date":"2023-09-07","id":1,"permalink":"/blog/","summary":"","tags":[],"title":"Blog"},{"content":"","date":"2025-02-20","id":2,"permalink":"/docs/start-here/","summary":"","tags":[],"title":"Start Here"},{"content":"\nChris Titus Tech\u0026rsquo;s Linux Utility Linutil is a distro-agnostic toolbox designed to simplify everyday Linux tasks. It helps users set up applications and optimize their systems for specific use cases. Developed in Rust ðŸ¦€, Linutil delivers exceptional performance and reliability.\nDistribution Support Linutil primarily supports Arch Linux, where it is extremely stable and well-integrated. While its development initially focused on Arch, support for other distributions is expanding:\nDebian and Fedora are now actively supported. openSUSE is currently in the development phase. Future releases will continue to add support for additional Linux distributions, making Linutil accessible to a wider audience.\nKey Features Single Binary Simplicity: Linutil is a compact, self-contained binary designed for ease of use. Preconfigured settings and automated tasks make it easy for users to accomplish complex setups with minimal effort. Just run the desired tasks, and Linutil handles the rest. Enhanced User Comfort: With its focus on simplifying system management, Linutil ensures a comfortable experience for users by streamlining configuration and setup processes. Command-Line Interface (CLI) Linutil also includes a powerful CLI tool, allowing users to:\nGet detailed help and support. Execute tasks and manage their systems directly through terminal commands. With its commitment to ease of use and cross-distro compatibility, Linutil is shaping up to be an essential tool for Linux enthusiasts and power users alike.\n","date":"2025-02-20","id":3,"permalink":"/docs/start-here/getting-started/","summary":"\u003cbr\u003e\n\u003cimg src=\"/images/cttlogo.png\" width=\"50\"\u003e\n\u003ch2 id=\"chris-titus-techs-linux-utility\"\u003eChris Titus Tech\u0026rsquo;s Linux Utility\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eLinutil\u003c/strong\u003e is a distro-agnostic toolbox designed to simplify everyday Linux tasks. It helps users set up applications and optimize their systems for specific use cases. Developed in \u003cstrong\u003eRust\u003c/strong\u003e ðŸ¦€, Linutil delivers exceptional performance and reliability.\u003c/p\u003e","tags":[],"title":"Getting Started"},{"content":"\rNOTE:\nLinutil can be run directly from the command line using the CLI installation. It is also available in different packages and can be installed via Cargo.\nCLI Packages Arch Linux OpenSUSE Cargo CLI To get started, pick which branch you would like to use, then run the command in your terminal: Stable Branch (Recommended) curl -fsSL https://christitus.com/linux | sh\rDev branch curl -fsSL https://christitus.com/linuxdev | sh\rPackage Linutil is also available as a package in various repositories: Arch Linux Linutil can be installed on Arch Linux with three different AUR packages:\nlinutil - Stable release compiled from source linutil-bin - Stable release pre-compiled linutil-git - Compiled from the last commit (not recommended) by running:\ngit clone https://aur.archlinux.org/\u0026lt;package\u0026gt;.git cd \u0026lt;package\u0026gt; makepkg -si\rReplace \u0026lt;package\u0026gt; with your preferred package.\nIf you use yay, paru or any other AUR Helper, it\u0026rsquo;s even simpler:\nparu -S linutil\rReplace paru with your preferred helper and linutil with your preferred package.\nOpenSUSE Linutil can be installed on OpenSUSE with:\nsudo zypper install linutil\rCargo Linutil can be installed via Cargo with:\ncargo install linutil_tui\r","date":"2025-02-20","id":4,"permalink":"/docs/start-here/installation/","summary":"\u003cdiv class=\"callout callout-note d-flex flex-row mt-4 mb-4 pt-4 pe-4 pb-2 ps-3\"\u003e\r\n  \u003csvg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  fill=\"none\"\n  stroke=\"currentColor\"\n  stroke-width=\"2\"\n  stroke-linecap=\"round\"\n  stroke-linejoin=\"round\"\n \n class=\"outline/info-circle svg-inline callout-icon me-2 mb-3\" id=\"svg-info-circle\" role=\"img\"\u003e\n  \u003cpath stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/\u003e\n  \u003cpath d=\"M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0\" /\u003e\n  \u003cpath d=\"M12 9h.01\" /\u003e\n  \u003cpath d=\"M11 12h1v4h1\" /\u003e\n\u003c/svg\u003e\r\n  \u003cdiv class=\"callout-content\"\u003e\r\n    \r\n    \u003cdiv class=\"callout-body\"\u003e\r\n      \u003cp\u003eNOTE:\u003c/p\u003e","tags":[],"title":"Installation"},{"content":"","date":"2025-02-22","id":5,"permalink":"/docs/meta/","summary":"","tags":[],"title":"Meta"},{"content":"","date":"2025-02-21","id":6,"permalink":"/docs/guides/","summary":"","tags":[],"title":"Guides"},{"content":" Our Pledge We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.\nOur Standards Examples of behavior that contributes to a positive environment for our community include:\nDemonstrating empathy and kindness toward other people Being respectful of differing opinions, viewpoints, and experiences Giving and gracefully accepting constructive feedback Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience Focusing on what is best not just for us as individuals, but for the overall community Examples of unacceptable behavior include:\nThe use of sexualized language or imagery, and sexual attention or advances of any kind Trolling, insulting or derogatory comments, and personal or political attacks Public or private harassment Publishing others\u0026rsquo; private information, such as a physical or email address, without their explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Enforcement Responsibilities Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.\nCommunity leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.\nScope This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.\nEnforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at contact@christitus.com. All complaints will be reviewed and investigated promptly and fairly.\nAll community leaders are obligated to respect the privacy and security of the reporter of any incident.\nEnforcement Guidelines Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:\n1. Correction Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.\nConsequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.\n2. Warning Community Impact: A violation through a single incident or series of actions.\nConsequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.\n3. Temporary Ban Community Impact: A serious violation of community standards, including sustained inappropriate behavior.\nConsequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.\n4. Permanent Ban Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.\nConsequence: A permanent ban from any sort of public interaction within the community.\nAttribution This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\nCommunity Impact Guidelines were inspired by Mozilla\u0026rsquo;s code of conduct enforcement ladder.\nFor answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.\n","date":"2025-02-22","id":7,"permalink":"/docs/meta/code-of-conduct/","summary":"\u003cimg src=\"/images/code-of-conduct.png\" width=\"50\"\u003e\n\u003ch2 id=\"our-pledge\"\u003eOur Pledge\u003c/h2\u003e\n\u003cp\u003eWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\u003c/p\u003e","tags":[],"title":"Code of Conduct"},{"content":" Thank you for considering contributing to Linutil! We appreciate your effort in helping improve this project. To ensure that your contributions align with the goals and quality standards of Linutil, please follow these guidelines:\n1. Install Rust: Make sure you have Rust installed on your machine. You can install it by following the instructions at rust-lang.org.\n2. Fork and Clone the repo Make a fork of the repo in GitHub Clone the fork git clone https://github.com/YOUR_USERNAME_HERE/linutil.git cd linutil\r3. Make your changes Edit the files you want to change: Make your changes to the relevant files. Test your changes: Run cargo run to test your modifications in a local environment and ensure everything works as expected. 4. Understand the existing code Have a clear reason: Donâ€™t change the way things are done without a valid reason. If you propose an alteration, be prepared to explain why itâ€™s necessary and how it improves the project. Respect existing conventions: Changes should align with the existing code style, design patterns, and overall project philosophy. If you want to introduce a new way of doing things, justify it clearly. 5. Learn from Past Pull Requests (PRs) Check merged PRs: Reviewing merged pull requests can give you an idea of what kind of contributions are accepted and how they are implemented. Study rejected PRs: This is especially important as it helps you avoid making similar mistakes or proposing changes that have already been considered and declined. 6. Write Clean, Descriptive Commit Messages Be descriptive: Your commit messages should clearly describe what the change does and why it was made. Use the imperative mood: For example, \u0026ldquo;Add feature X\u0026rdquo; or \u0026ldquo;Fix bug in Y\u0026rdquo;, rather than \u0026ldquo;Added feature X\u0026rdquo; or \u0026ldquo;Fixed bug in Y\u0026rdquo;. Keep commits clean: Avoid committing a change and then immediately following it with a fix for that change. Instead, amend your commit or squash it if needed. 7. Keep Your Pull Requests (PRs) Small and Focused Make small, targeted PRs: Focus on one feature or fix per pull request. This makes it easier to review and increases the likelihood of acceptance. Avoid combining unrelated changes: PRs that tackle multiple unrelated issues are harder to review and might be rejected because of a single problem. 8. Understand and Test the Code You Write Review your code: Before submitting your changes, take the time to review your code for readability, efficiency and performance. Consider how your changes affect the project. Avoid using LLMs: Don\u0026rsquo;t submit AI-generated code without reviewing and testing it first. Ensure that any code you submit is thoroughly understood and meets the project\u0026rsquo;s standards. Testing Requirements: Failure to conduct testing after multiple requests may result in the closure of your Pull Request. 9. Code Review and Feedback Expect feedback: PRs will undergo code review. Be open to feedback and willing to make adjustments as needed. Participate in reviews: If you feel comfortable, review other contributors\u0026rsquo; PRs as well. Peer review is a great way to learn and ensure high-quality contributions. 10. Contributing Is More Than Just Code Test the tool: Running tests and providing feedback on how the tool works in different environments is a valuable contribution. Write well-formed issues: Clearly describe bugs or problems you encounter, providing as much detail as possible, including steps to reproduce the issue. Propose reasonable feature requests: When suggesting new features, ensure they fit within the scope, style, and design of the project. Provide clear reasoning and use cases. 11. Documentation Update the documentation: If your change affects the functionality, please update the relevant documentation files to reflect this. Automatic generation: If you decide to add functionality through a new shell script, make sure to fill out all fields in tab_data.toml and run cargo xtask docgen. 12. License Agree to the license: By contributing to Linutil, you agree that your contributions will be licensed under the project\u0026rsquo;s MIT license. We appreciate your contributions and look forward to collaborating with you to make Linutil better!\n","date":"2025-02-22","id":8,"permalink":"/docs/meta/contributing/","summary":"\u003cimg src=\"/images/contribute.png\" width=\"50\"\u003e\n\u003cbr\u003e \n\u003cp\u003eThank you for considering contributing to Linutil! We appreciate your effort in helping improve this project. To ensure that your contributions align with the goals and quality standards of Linutil, please follow these guidelines:\u003c/p\u003e","tags":[],"title":"Contributing"},{"content":" Vision To simplify linux tasks for all users for all distributions; Easily, efficiently, and effortlessly. Goals Focus on tasks that take time in Linux and automate them. (Example: Removing a user, adding a user, etc. - but mostly BASH scripts with POSIX compliance.) Remove Binary linutil from being tracked in git and make it a github action. Document every function and feature of linutil. (Preview panel description addition) Create a discord server for linutil and invite the community. Power Optimizations for Laptops Milestones Q4 2024 Finish the foundation of the project\u0026rsquo;s CLI Implement CLI arguments and configuration support Add an option for logging script executions Q1 2025 GUI Brainstorming and Planning Basic GUI Implementation Q2 2025 Full GUI Implementation Community Feedback Encourage community input and suggestions for future development. ","date":"2025-02-22","id":9,"permalink":"/docs/meta/roadmap/","summary":"\u003cimg src=\"/images/roadmap.png\" width=\"50\"\u003e\n\u003ch2 id=\"vision\"\u003eVision\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTo simplify linux tasks for all users for all distributions; Easily, efficiently, and effortlessly.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"goals\"\u003eGoals\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cinput disabled=\"\" type=\"checkbox\"\u003e Focus on tasks that take time in Linux and automate them. (Example: Removing a user, adding a user, etc. - but mostly BASH scripts with POSIX compliance.)\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e Remove Binary linutil from being tracked in git and make it a github action.\u003c/li\u003e\n\u003cli\u003e\u003cinput disabled=\"\" type=\"checkbox\"\u003e Document every function and feature of linutil. (Preview panel description addition)\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e Create a discord server for linutil and invite the community.\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e Power Optimizations for Laptops\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"milestones\"\u003eMilestones\u003c/h2\u003e\n\u003ch3 id=\"q4-2024\"\u003eQ4 2024\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e Finish the foundation of the project\u0026rsquo;s CLI\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e Implement CLI arguments and configuration support\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e Add an option for logging script executions\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"q1-2025\"\u003eQ1 2025\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cinput disabled=\"\" type=\"checkbox\"\u003e GUI Brainstorming and Planning\u003c/li\u003e\n\u003cli\u003e\u003cinput disabled=\"\" type=\"checkbox\"\u003e Basic GUI Implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"q2-2025\"\u003eQ2 2025\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cinput disabled=\"\" type=\"checkbox\"\u003e Full GUI Implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"community-feedback\"\u003eCommunity Feedback\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eEncourage community input and suggestions for future development.\u003c/li\u003e\n\u003c/ul\u003e","tags":[],"title":"Roadmap"},{"content":"Application Setup Communication Apps Discord: Discord is a versatile communication platform for gamers and communities, offering voice, video, and text chat features. Jitsi: Jitsi Meet is an open-source video conferencing tool that allows users to host and join secure meetings directly from their web browsers without the need for downloads. Signal: Signal is a privacy-focused messaging app that provides end-to-end encryption for secure text, voice, and video communication. Slack: Slack is a collaboration platform designed for team communication, featuring channels, direct messaging, file sharing, and integrations with various productivity tools. Telegram: Telegram is a cloud-based messaging app known for its speed and security, offering features like group chats, channels, and end-to-end encrypted calls. Thunderbird: Thunderbird is a free, open-source email client that offers powerful features like customizable email management, a built-in calendar, and extensive add-ons for enhanced functionality. Zoom: Zoom is a widely-used video conferencing platform that allows users to host virtual meetings, webinars, and online collaboration with features like screen sharing and recording. Developer Tools Github Desktop: GitHub Desktop is a user-friendly application that simplifies the process of managing Git repositories and interacting with GitHub, providing a graphical interface for tasks like committing, branching, and syncing changes. JetBrains Toolbox: JetBrains Toolbox is a collection of tools and an app that help developers work with JetBrains products. Meld: Meld is a visual diff and merge tool that helps compare files, directories, and version-controlled projects. Neovim: Neovim is a refactor, and sometimes redactor, in the tradition of Vim. It is not a rewrite but a continuation and extension of Vim. This command configures neovim from CTT\u0026rsquo;s neovim configuration. https://github.com/ChrisTitusTech/neovim Ngrok: Ngrok is a tool that creates secure, temporary tunnels to expose local servers to the internet for testing and development. Sublime Text: Sublime Text is a fast, lightweight, and customizable text editor known for its simplicity, powerful features, and wide range of plugins for various programming languages. VS Code: Visual Studio Code (VS Code) is a lightweight, open-source code editor with built-in support for debugging, version control, and extensions for various programming languages and frameworks. VS Codium: VSCodium is a free, open-source version of Visual Studio Code (VS Code) that removes Microsoft-specific telemetry and branding. Web Browsers Brave: Brave is a free and open-source web browser developed by Brave Software, Inc. based on the Chromium web browser. Chromium: Chromium is an open-source web browser project started by Google, to provide the source code for the proprietary Google Chrome browser. Google Chrome: Google Chrome is a fast, secure, and free web browser, built for the modern web. LibreWolf: LibreWolf is a fork of Firefox, focused on privacy, security, and freedom. Lynx: Lynx is a highly configurable text-based web browser for use on cursor-addressable character cell terminals. Mozilla Firefox: Mozilla Firefox is a free and open-source web browser developed by the Mozilla Foundation. Thorium: Thorium is a Chromium-based browser focused on privacy and performance. Vivaldi: Vivaldi is a freeware, cross-platform web browser developed by Vivaldi Technologies. Tor Browser: Tor Browser is a free and open-source firefox-based web browser designed for anonymity and censorship circumvention. waterfox: Waterfox is the privacy-focused web browser engineered to give you speed, control, and peace of mind on the internet. Alacritty: Alacritty is a modern terminal emulator that comes with sensible defaults, but allows for extensive configuration. By integrating with other applications, rather than reimplementing their functionality, it manages to provide a flexible set of features with high performance. The supported platforms currently consist of BSD, Linux, macOS and Windows. This command installs and configures alacritty terminal emulator. Android Debloater: Universal Android Debloater (UAD) is a tool designed to help users remove bloatware and unnecessary pre-installed applications from Android devices, enhancing performance and user experience. Bash Prompt: The .bashrc file is a script that runs every time a new terminal session is started in Unix-like operating systems. It is used to configure the shell session, set up aliases, define functions, and more, making the terminal easier to use and more powerful. This command configures the key sections and functionalities defined in the .bashrc file from CTT\u0026rsquo;s mybash repository. https://github.com/ChrisTitusTech/mybash Bottles: Bottles allows Windows software, like applications and games, to run on Linux. Bottles also provides tools to categorize, organize and optimize your applications. Docker: Docker is an open platform that uses OS-level virtualization to deliver software in packages called containers. Podman: Podman is a daemon-less open platform that uses OS-level virtualization to deliver software in packages called containers. Podman-compose: Podman Compose is a tool for defining and running multi-container applications using Podman. DWM-Titus: DWM is a dynamic window manager for X. It manages windows in tiled, monocle and floating layouts. All of the layouts can be applied dynamically, optimising the environment for the application in use and the task performed. This command installs and configures DWM and a desktop manager. The list of patches applied can be found in CTT\u0026rsquo;s DWM repository https://github.com/ChrisTitusTech/dwm-titus Fastfetch: Fastfetch is a neofetch-like tool for fetching system information and displaying it prettily. It is written mainly in C, with performance and customizability in mind. This command installs fastfetch and configures from CTT\u0026rsquo;s mybash repository. https://github.com/ChrisTitusTech/mybash Flatpak / Flathub: Flatpak is a universal application sandbox for Linux that uses isolated packages from Flathub to prevent conflicts and system alterations, while alleviating dependency concerns. This command installs Flatpak and adds the Flathub repository Grub Theme: Installs ChrisTitusTech\u0026rsquo;s Top 5 Bootloader Themes script to allow for easy customization of GRUB. Kitty: kitty is a free and open-source GPU-accelerated terminal emulator for Linux, macOS, and some BSD distributions, focused on performance and features. kitty is written in a mix of C and Python programming languages. This command installs and configures kitty. Linutil Installer: Installs a distro-specific Linutil package locally. Linutil Updater: Updates your local Linutil crate installation. Rofi: Rofi is a window switcher, run dialog, ssh-launcher and dmenu replacement that started as a clone of simpleswitcher, written by Sean Pringle and later expanded by Dave Davenport. This command installs and configures rofi with configuration from CTT\u0026rsquo;s DWM repo. https://github.com/ChrisTitusTech/dwm-titus Waydroid: Waydroid is an emulator that allows you to run Android apps and games on Linux. ZSH Prompt: The Z shell is a Unix shell that can be used as an interactive login shell and as a command interpreter for shell scripting. Zsh is an extended Bourne shell with many improvements, including some features of Bash, ksh, and tcsh. This command installs ZSH prompt and provides basic configuration. Gaming Diablo II Resurrected Loot Filter: This is a loot filter for Diablo II Resurrected. It\u0026rsquo;s designed to be a simple, clean, and easy to read loot filter that highlights the most important items. Works on battle.net and single player. No frills, no config, just highlights high runes and other valuable items. For more information visit: dr2-loot-filter Security Firewall Baselines (CTT): Developed to ease iptables firewall configuration, UFW provides a user friendly way to create an IPv4 or IPv6 host-based firewall. This command installs UFW and configures UFW based on CTT\u0026rsquo;s recommended rules. For more information visit: https://christitus.com/linux-security-mistakes System Setup Linutil provides streamlined system setup options for Arch Linux and Fedora. Below are the features and tools available:\nArch Linux Arch Server Setup: Installs a minimal Arch server setup in under 5 minutes. Paru AUR Helper: A feature-rich and minimal-interaction AUR helper wrapping pacman. Learn more: Arch Wiki - AUR Helpers Yay AUR Helper: Yet Another Yogurt - an AUR helper written in Go. Learn more: Arch Wiki - AUR Helpers Fedora Configure DNF: Optimizes DNF for parallel downloads. Multimedia Codecs: Installs multimedia codecs and configures RPM Fusion repositories. NVIDIA Proprietary Drivers: Installs proprietary NVIDIA drivers for Fedora. RPM Fusion: Provides access to additional software not shipped by Fedora or Red Hat. Learn more: RPM Fusion Virtualization: Enables virtualization through DNF. Build Prerequisites: Installs software dependencies required for development. Full System Cleanup: Removes unnecessary packages, old cache files, temporary files, and empties the trash. Full System Update: Updates the system to the latest available packages. Gaming Dependencies: Installs dependencies required for gaming. Global Theme: Configures and installs global theming for a customized desktop experience. Remove Snaps: Removes Snap packages from the system. TTY Fonts: Sets the default TTY font to Terminus (size 32, bold). Utilities Monitor Control Auto Detect Displays: This script is designed to detect and apply recommended configuration for monitors connected with your system Change Orientation: This script is designed to change the orientation of monitors in your system Disable Monitor: This script is designed to disable a monitor in your system Duplicate Displays: This script is designed to duplicate display among multi-monitor setup in your system Enable Monitor: This script is designed to enable a monitor in your system Extend Displays: This script is designed to extend display among multi-monitor setup in your system Manage Arrangement: This script is designed to arrange monitors in multi-monitor setup in your system Reset Scaling: This script is designed to reset scaling of a monitor in your system Scale Monitors: This script is designed to change the scaling of monitors in your system Set Brightness: This script is designed to change the Brightness of monitors connected to your system Set Primary Monitor: This script is designed to set a Primary monitor in your system Set Resolution: This script is designed to change the resolution of monitors connected to your system Printers CUPS: This script will install the CUPS system, required for most printer drivers on Linux. Epson printer drivers: This script will install the Epson printer drivers. User Account Manager Auto Mount Drive: This utility is designed to help with automating the process of mounting a drive on to your system. Bluetooth Manager: This utility is designed to manage bluetooth in your system Numlock on Startup: This utility is designed to enable Num Lock at boot, rather than within desktop environments like KDE or GNOME Ollama: This utility is designed to manage ollama in your system Service Manager: This utility is designed to manage services in your system WiFi Manager: This utility is designed to manage wifi in your system ","date":"2025-02-21","id":10,"permalink":"/docs/guides/user-guide/","summary":"\u003ch2 id=\"application-setup\"\u003eApplication Setup\u003c/h2\u003e\n\u003ch3 id=\"communication-apps\"\u003eCommunication Apps\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eDiscord\u003c/strong\u003e: Discord is a versatile communication platform for gamers and communities, offering voice, video, and text chat features.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eJitsi\u003c/strong\u003e: Jitsi Meet is an open-source video conferencing tool that allows users to host and join secure meetings directly from their web browsers without the need for downloads.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSignal\u003c/strong\u003e: Signal is a privacy-focused messaging app that provides end-to-end encryption for secure text, voice, and video communication.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSlack\u003c/strong\u003e: Slack is a collaboration platform designed for team communication, featuring channels, direct messaging, file sharing, and integrations with various productivity tools.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eTelegram\u003c/strong\u003e: Telegram is a cloud-based messaging app known for its speed and security, offering features like group chats, channels, and end-to-end encrypted calls.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eThunderbird\u003c/strong\u003e: Thunderbird is a free, open-source email client that offers powerful features like customizable email management, a built-in calendar, and extensive add-ons for enhanced functionality.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eZoom\u003c/strong\u003e: Zoom is a widely-used video conferencing platform that allows users to host virtual meetings, webinars, and online collaboration with features like screen sharing and recording.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"developer-tools\"\u003eDeveloper Tools\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eGithub Desktop\u003c/strong\u003e: GitHub Desktop is a user-friendly application that simplifies the process of managing Git repositories and interacting with GitHub, providing a graphical interface for tasks like committing, branching, and syncing changes.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eJetBrains Toolbox\u003c/strong\u003e: JetBrains Toolbox is a collection of tools and an app that help developers work with JetBrains products.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eMeld\u003c/strong\u003e: Meld is a visual diff and merge tool that helps compare files, directories, and version-controlled projects.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eNeovim\u003c/strong\u003e: Neovim is a refactor, and sometimes redactor, in the tradition of Vim.\nIt is not a rewrite but a continuation and extension of Vim.\nThis command configures neovim from CTT\u0026rsquo;s neovim configuration.\nhttps://github.com/ChrisTitusTech/neovim\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eNgrok\u003c/strong\u003e: Ngrok is a tool that creates secure, temporary tunnels to expose local servers to the internet for testing and development.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSublime Text\u003c/strong\u003e: Sublime Text is a fast, lightweight, and customizable text editor known for its simplicity, powerful features, and wide range of plugins for various programming languages.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eVS Code\u003c/strong\u003e: Visual Studio Code (VS Code) is a lightweight, open-source code editor with built-in support for debugging, version control, and extensions for various programming languages and frameworks.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eVS Codium\u003c/strong\u003e: VSCodium is a free, open-source version of Visual Studio Code (VS Code) that removes Microsoft-specific telemetry and branding.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"web-browsers\"\u003eWeb Browsers\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eBrave\u003c/strong\u003e: Brave is a free and open-source web browser developed by Brave Software, Inc. based on the Chromium web browser.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eChromium\u003c/strong\u003e: Chromium is an open-source web browser project started by Google, to provide the source code for the proprietary Google Chrome browser.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eGoogle Chrome\u003c/strong\u003e: Google Chrome is a fast, secure, and free web browser, built for the modern web.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eLibreWolf\u003c/strong\u003e: LibreWolf is a fork of Firefox, focused on privacy, security, and freedom.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eLynx\u003c/strong\u003e: Lynx is a highly configurable text-based web browser for use on cursor-addressable character cell terminals.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eMozilla Firefox\u003c/strong\u003e: Mozilla Firefox is a free and open-source web browser developed by the Mozilla Foundation.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eThorium\u003c/strong\u003e: Thorium is a Chromium-based browser focused on privacy and performance.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eVivaldi\u003c/strong\u003e: Vivaldi is a freeware, cross-platform web browser developed by Vivaldi Technologies.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eTor Browser\u003c/strong\u003e: Tor Browser is a free and open-source firefox-based web browser designed for anonymity and censorship circumvention.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ewaterfox\u003c/strong\u003e: Waterfox is the privacy-focused web browser engineered to give you speed, control, and peace of mind on the internet.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eAlacritty\u003c/strong\u003e: Alacritty is a modern terminal emulator that comes with sensible defaults, but allows for extensive configuration. By integrating with other applications, rather than reimplementing their functionality, it manages to provide a flexible set of features with high performance. The supported platforms currently consist of BSD, Linux, macOS and Windows. This command installs and configures alacritty terminal emulator.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eAndroid Debloater\u003c/strong\u003e: Universal Android Debloater (UAD) is a tool designed to help users remove bloatware and unnecessary pre-installed applications from Android devices, enhancing performance and user experience.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eBash Prompt\u003c/strong\u003e: The .bashrc file is a script that runs every time a new terminal session is started in Unix-like operating systems. It is used to configure the shell session, set up aliases, define functions, and more, making the terminal easier to use and more powerful. This command configures the key sections and functionalities defined in the .bashrc file from CTT\u0026rsquo;s mybash repository. https://github.com/ChrisTitusTech/mybash\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eBottles\u003c/strong\u003e: Bottles allows Windows software, like applications and games, to run on Linux. Bottles also provides tools to categorize, organize and optimize your applications.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDocker\u003c/strong\u003e: Docker is an open platform that uses OS-level virtualization to deliver software in packages called containers.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePodman\u003c/strong\u003e: Podman is a daemon-less open platform that uses OS-level virtualization to deliver software in packages called containers.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePodman-compose\u003c/strong\u003e: Podman Compose is a tool for defining and running multi-container applications using Podman.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDWM-Titus\u003c/strong\u003e: DWM is a dynamic window manager for X.\nIt manages windows in tiled, monocle and floating layouts.\nAll of the layouts can be applied dynamically, optimising the environment for the application in use and the task performed.\nThis command installs and configures DWM and a desktop manager.\nThe list of patches applied can be found in CTT\u0026rsquo;s DWM repository\nhttps://github.com/ChrisTitusTech/dwm-titus\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eFastfetch\u003c/strong\u003e: Fastfetch is a neofetch-like tool for fetching system information and displaying it prettily. It is written mainly in C, with performance and customizability in mind. This command installs fastfetch and configures from CTT\u0026rsquo;s mybash repository. https://github.com/ChrisTitusTech/mybash\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eFlatpak / Flathub\u003c/strong\u003e: Flatpak is a universal application sandbox for Linux that uses isolated packages from Flathub to prevent conflicts and system alterations, while alleviating dependency concerns. This command installs Flatpak and adds the Flathub repository\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eGrub Theme\u003c/strong\u003e: Installs ChrisTitusTech\u0026rsquo;s Top 5 Bootloader Themes script to allow for easy customization of GRUB.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eKitty\u003c/strong\u003e: kitty is a free and open-source GPU-accelerated terminal emulator for Linux, macOS, and some BSD distributions, focused on performance and features. kitty is written in a mix of C and Python programming languages. This command installs and configures kitty.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eLinutil Installer\u003c/strong\u003e: Installs a distro-specific Linutil package locally.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eLinutil Updater\u003c/strong\u003e: Updates your local Linutil crate installation.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eRofi\u003c/strong\u003e: Rofi is a window switcher, run dialog, ssh-launcher and dmenu replacement that started as a clone of simpleswitcher, written by Sean Pringle and later expanded by Dave Davenport. This command installs and configures rofi with configuration from CTT\u0026rsquo;s DWM repo. https://github.com/ChrisTitusTech/dwm-titus\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eWaydroid\u003c/strong\u003e: Waydroid is an emulator that allows you to run Android apps and games on Linux.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eZSH Prompt\u003c/strong\u003e: The Z shell is a Unix shell that can be used as an interactive login shell and as a command interpreter for shell scripting. Zsh is an extended Bourne shell with many improvements, including some features of Bash, ksh, and tcsh. This command installs ZSH prompt and provides basic configuration.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"gaming\"\u003eGaming\u003c/h2\u003e\n\u003ch3 id=\"diablo-ii-resurrected\"\u003eDiablo II Resurrected\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eLoot Filter\u003c/strong\u003e: This is a loot filter for Diablo II Resurrected. It\u0026rsquo;s designed to be a simple, clean, and easy to read loot filter that highlights the most important items. Works on battle.net and single player. No frills, no config, just highlights high runes and other valuable items. For more information visit: \u003ca href=\"https://github.com/ChrisTitusTech/d2r-loot-filter\"\u003edr2-loot-filter\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"security\"\u003eSecurity\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eFirewall Baselines (CTT)\u003c/strong\u003e: Developed to ease iptables firewall configuration, UFW provides a user friendly way to create an IPv4 or IPv6 host-based firewall. This command installs UFW and configures UFW based on CTT\u0026rsquo;s recommended rules. For more information visit: https://christitus.com/linux-security-mistakes\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"system-setup\"\u003eSystem Setup\u003c/h2\u003e\n\u003cp\u003e\u003cem\u003eLinutil provides streamlined system setup options for \u003cstrong\u003eArch Linux\u003c/strong\u003e and \u003cstrong\u003eFedora\u003c/strong\u003e. Below are the features and tools available:\u003c/em\u003e\u003c/p\u003e","tags":[],"title":"User Guide"},{"content":"\rLinutil supports various command-line arguments to customize its behavior. Here are some common arguments you can use:\n-c, --config \u0026lt;CONFIG\u0026gt; : Path to the configuration file. --override-validation : Show all available options, disregarding compatibility checks (UNSAFE). --size-bypass : Bypass the terminal size limit. -y, --skip-confirmation : Skip confirmation prompt before executing commands. -t, --theme \u0026lt;THEME\u0026gt; : Set the theme to use in the application [default: default] [possible values: default, compatible]. -h, --help : Print help. For more detailed usage, run:\ncurl -fsSL https://christitus.com/linux | sh -s -- --help\rlinutil --help\r","date":"2025-02-20","id":11,"permalink":"/docs/start-here/commands/","summary":"\u003cimg src=\"/images/script.png\" width=\"50\"\u003e\r\n\u003cp\u003e\u003cem\u003eLinutil supports various command-line arguments to customize its behavior. Here are some common arguments you can use:\u003c/em\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e-c, --config \u0026lt;CONFIG\u0026gt;\u003c/code\u003e : Path to the configuration file.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e--override-validation\u003c/code\u003e : Show all available options, disregarding compatibility checks (UNSAFE).\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e--size-bypass\u003c/code\u003e : Bypass the terminal size limit.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e-y, --skip-confirmation\u003c/code\u003e : Skip confirmation prompt before executing commands.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e-t, --theme \u0026lt;THEME\u0026gt;\u003c/code\u003e : Set the theme to use in the application [default: \u003ccode\u003edefault\u003c/code\u003e] [possible values: \u003ccode\u003edefault\u003c/code\u003e, \u003ccode\u003ecompatible\u003c/code\u003e].\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e-h, --help\u003c/code\u003e : Print help.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eFor more detailed usage, run:\u003c/p\u003e","tags":[],"title":"Commands"},{"content":"","date":"2023-09-07","id":12,"permalink":"/docs/","summary":"","tags":[],"title":"Docs"},{"content":"","date":"2023-09-07","id":13,"permalink":"/","summary":"","tags":[],"title":"Welcome to Linutil Docs"},{"content":"","date":"0001-01-01","id":14,"permalink":"/categories/","summary":"","tags":[],"title":"Categories"},{"content":"","date":"0001-01-01","id":15,"permalink":"/contributors/","summary":"","tags":[],"title":"Contributors"},{"content":"","date":"0001-01-01","id":16,"permalink":"/tags/","summary":"","tags":[],"title":"Tags"}]